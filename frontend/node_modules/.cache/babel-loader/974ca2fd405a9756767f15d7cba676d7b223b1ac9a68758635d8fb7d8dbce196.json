{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documentos\\\\CEUB\\\\4 SEMESTRE\\\\Interacao-HC\\\\Site - Refugiados\\\\Site_Refugiados\\\\frontend\\\\src\\\\pages\\\\FormPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '../supabaseCliente';\nimport { Link, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormPage = () => {\n  _s();\n  var _questions$currentQue, _questions$currentQue2;\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [completed, setCompleted] = useState(false);\n  const [questions, setQuestionario] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fechData = async () => {\n      try {\n        // Buscar perguntas\n        const {\n          data: questoes,\n          error: questoesError\n        } = await supabase.schema('aurora_refugio').from('questions').select('question_id, correct_choice_id, question_text').eq('guide_id', id);\n        if (questoesError) {\n          console.error('Erro ao buscar perguntas:', questoesError);\n          return;\n        }\n\n        /*\r\n        EXEMPLO DA REQUISIÇÃO QUESTOES\r\n        questoes = {\r\n        correct_choice_id: 1,\r\n        question_id: 1,\r\n        question_text: \"Qual dos seguintes é um meio comum de transporte público em áreas urbanas?\r\n        }\r\n        */\n\n        // Buscar alternativas\n        const todasAlternativas = await Promise.all(questoes.map(async element => {\n          const {\n            data: alternativas,\n            error: alternativasError\n          } = await supabase.schema('aurora_refugio').from('choices').select('choice_id, choice_text').eq('question_id', element.question_id);\n          if (alternativasError) {\n            console.error('Erro ao buscar alternativas', alternativasError);\n            return [];\n          }\n          return {\n            question_id: element.question_id,\n            alternativas: alternativas.map(alt => ({\n              choice_id: alt.choice_id,\n              choice_text: alt.choice_text\n            }))\n          };\n        }));\n\n        /*\r\n        EXEMPLO DA REQUISIÇÃO ALTERNATIVAS\r\n        todasAlternativas = {\r\n        alternativas [{choice_id: 3, choice_text: 'Avião'}, {choice_id: 2, choice_text: 'Carro'} ...],\r\n        question_id: 1,\r\n        }\r\n        */\n\n        // Criar questionário\n        const questions = questoes.map(questao => {\n          var _todasAlternativas$fi;\n          const alternativasFiltradas = ((_todasAlternativas$fi = todasAlternativas.find(alt => alt.question_id === questao.question_id)) === null || _todasAlternativas$fi === void 0 ? void 0 : _todasAlternativas$fi.alternativas) || [];\n          return {\n            question: questao.question_text,\n            options: alternativasFiltradas,\n            answer: alternativasFiltradas.find(alt => alt.choice_id === questao.correct_choice_id)\n          };\n        });\n        setQuestionario(questions);\n      } catch (error) {\n        console.error('Erro ao buscar dados', error);\n      }\n    };\n    fechData();\n  }, [id]);\n\n  // Função chamada ao clicar na resposta\n  const handleAnswerSelect = option => {\n    setSelectedAnswer(option); // Define a resposta selecionada\n\n    if (option.choice_id === questions[currentQuestion].answer.choice_id) {\n      setIsCorrect(true);\n\n      // Avança para a próxima pergunta\n      if (currentQuestion === questions.length - 1) {\n        setCompleted(true); // Marca como concluído se for a última pergunta\n      } else {\n        setTimeout(() => {\n          setCurrentQuestion(currentQuestion + 1); // Avança para a próxima pergunta após 1 segundo\n          setSelectedAnswer(null); // Limpa a resposta selecionada\n          setIsCorrect(false); // Reseta o estado de resposta correta\n        }, 1000);\n      }\n    } else {\n      setIsCorrect(false);\n      alert('Resposta incorreta. Tente novamente.');\n    }\n  };\n\n  //console.log(questions)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-4/5 p-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${process.env.PUBLIC_URL}/assets/aurora.png`,\n            alt: \"Aurora Mascote\",\n            className: \"size-44 -scale-x-100 h-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold\",\n            children: `Pergunta ${currentQuestion + 1}: ${((_questions$currentQue = questions[currentQuestion]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.question) || 'Carregando...'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), !completed ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-around gap-10\",\n            children: (_questions$currentQue2 = questions[currentQuestion]) === null || _questions$currentQue2 === void 0 ? void 0 : _questions$currentQue2.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-1/3\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: `block p-4 h-52 bg-white rounded-lg cursor-pointer text-center hover:bg-blue-300 ${selectedAnswer === option ? 'bg-blue-300' : ''}`,\n                onClick: () => handleAnswerSelect(option) // Chama a função quando a opção é clicada\n                ,\n                children: option.choice_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), isCorrect && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-green-600 mt-2\",\n            children: \"Resposta correta! Avan\\xE7ando para a pr\\xF3xima pergunta...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font-semibold pb-5\",\n            children: \"Parab\\xE9ns! Voc\\xEA completou o question\\xE1rio.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/guia\",\n            className: \"bg-blue-500 text-white py-2 px-4 rounded mb-4\",\n            children: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-2 bg-gray-300 rounded-full\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-2 bg-blue-500 rounded-full\",\n              style: {\n                width: `${(currentQuestion + 1) / questions.length * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/5 h-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 h-full\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"flex flex-col items-center h-full space-y-10\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"font-bold\",\n              children: \"Tema 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"text-gray-600\",\n              children: \"Tema 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"text-gray-600\",\n              children: \"Tema 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"text-gray-600\",\n              children: \"Tema 4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"text-gray-600\",\n              children: \"Finaliza\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(FormPage, \"eecpsFvXD/JLnZcRX+1qgSnK8e0=\", false, function () {\n  return [useParams];\n});\n_c = FormPage;\nexport default FormPage;\nvar _c;\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["React","useEffect","useState","supabase","Link","useParams","jsxDEV","_jsxDEV","FormPage","_s","_questions$currentQue","_questions$currentQue2","currentQuestion","setCurrentQuestion","selectedAnswer","setSelectedAnswer","isCorrect","setIsCorrect","completed","setCompleted","questions","setQuestionario","id","fechData","data","questoes","error","questoesError","schema","from","select","eq","console","todasAlternativas","Promise","all","map","element","alternativas","alternativasError","question_id","alt","choice_id","choice_text","questao","_todasAlternativas$fi","alternativasFiltradas","find","question","question_text","options","answer","correct_choice_id","handleAnswerSelect","option","length","setTimeout","alert","className","children","src","process","env","PUBLIC_URL","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","to","style","width","_c","$RefreshReg$"],"sources":["D:/Documentos/CEUB/4 SEMESTRE/Interacao-HC/Site - Refugiados/Site_Refugiados/frontend/src/pages/FormPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { supabase } from '../supabaseCliente';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\nconst FormPage = () => {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [completed, setCompleted] = useState(false);\r\n  const [questions, setQuestionario] = useState([]);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fechData = async () => {\r\n\r\n      try {\r\n        // Buscar perguntas\r\n        const { data: questoes, error: questoesError } = await supabase\r\n          .schema('aurora_refugio')\r\n          .from('questions')\r\n          .select('question_id, correct_choice_id, question_text')\r\n          .eq('guide_id', id);\r\n\r\n        if (questoesError) {\r\n          console.error('Erro ao buscar perguntas:', questoesError);\r\n          return;\r\n        }\r\n\r\n        /*\r\n        EXEMPLO DA REQUISIÇÃO QUESTOES\r\n        questoes = {\r\n        correct_choice_id: 1,\r\n        question_id: 1,\r\n        question_text: \"Qual dos seguintes é um meio comum de transporte público em áreas urbanas?\r\n        }\r\n        */\r\n\r\n\r\n        // Buscar alternativas\r\n        const todasAlternativas = await Promise.all(\r\n\r\n          questoes.map(\r\n\r\n            async (element) => {\r\n\r\n              const {data: alternativas, error: alternativasError} = await supabase\r\n              .schema('aurora_refugio')\r\n              .from('choices')\r\n              .select('choice_id, choice_text')\r\n              .eq('question_id', element.question_id);\r\n\r\n              if (alternativasError) {\r\n                console.error('Erro ao buscar alternativas', alternativasError)\r\n                return []\r\n              }\r\n\r\n              return {\r\n                question_id:element.question_id,\r\n                alternativas: alternativas.map((alt) => ({\r\n                  choice_id: alt.choice_id,\r\n                  choice_text: alt.choice_text\r\n                })),\r\n              };\r\n            })\r\n          )\r\n\r\n          /*\r\n          EXEMPLO DA REQUISIÇÃO ALTERNATIVAS\r\n          todasAlternativas = {\r\n          alternativas [{choice_id: 3, choice_text: 'Avião'}, {choice_id: 2, choice_text: 'Carro'} ...],\r\n          question_id: 1,\r\n          }\r\n          */\r\n\r\n        // Criar questionário\r\n        const questions = questoes.map((questao) => {\r\n\r\n          const alternativasFiltradas = todasAlternativas.find(\r\n            (alt) => alt.question_id === questao.question_id\r\n          )?.alternativas || [];\r\n\r\n\r\n          return {\r\n            question: questao.question_text,\r\n            options: alternativasFiltradas,\r\n            answer: alternativasFiltradas.find(\r\n              (alt) => alt.choice_id === questao.correct_choice_id\r\n            ),\r\n          };\r\n        });\r\n\r\n        setQuestionario(questions);\r\n\r\n      } catch (error) {\r\n        console.error('Erro ao buscar dados', error);\r\n      }\r\n    };\r\n\r\n    fechData();\r\n  }, [id]);\r\n\r\n  // Função chamada ao clicar na resposta\r\n  const handleAnswerSelect = (option) => {\r\n    setSelectedAnswer(option); // Define a resposta selecionada\r\n\r\n    if (option.choice_id === questions[currentQuestion].answer.choice_id) {\r\n      setIsCorrect(true);\r\n\r\n      // Avança para a próxima pergunta\r\n      if (currentQuestion === questions.length - 1) {\r\n        setCompleted(true); // Marca como concluído se for a última pergunta\r\n      } else {\r\n        setTimeout(() => {\r\n          setCurrentQuestion(currentQuestion + 1); // Avança para a próxima pergunta após 1 segundo\r\n          setSelectedAnswer(null); // Limpa a resposta selecionada\r\n          setIsCorrect(false); // Reseta o estado de resposta correta\r\n        }, 1000);\r\n      }\r\n    } else {\r\n      setIsCorrect(false);\r\n      alert('Resposta incorreta. Tente novamente.');\r\n    }\r\n  };\r\n\r\n  //console.log(questions)\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <div className=\"flex\">\r\n        {/* Conteúdo principal */}\r\n        <div className=\"w-4/5 p-10\">\r\n          <div className=\"flex items-center mb-6\">\r\n            {/* Imagem da mascote */}\r\n            <img\r\n              src={`${process.env.PUBLIC_URL}/assets/aurora.png`}\r\n              alt=\"Aurora Mascote\"\r\n              className=\"size-44 -scale-x-100 h-auto\"\r\n            />\r\n            <h2 className=\"text-2xl font-bold\">\r\n              {`Pergunta ${currentQuestion + 1}: ${questions[currentQuestion]?.question || 'Carregando...'}`}\r\n            </h2>\r\n          </div>\r\n          {!completed ? (\r\n            <div className=\"p-5\">\r\n              <div className=\"flex justify-around gap-10\">\r\n                {/* Opções de resposta */}\r\n                {questions[currentQuestion]?.options.map((option, index) => (\r\n                  <div key={index} className=\"w-1/3\">\r\n                    <label\r\n                      className={`block p-4 h-52 bg-white rounded-lg cursor-pointer text-center hover:bg-blue-300 ${\r\n                        selectedAnswer === option ? 'bg-blue-300' : ''\r\n                      }`}\r\n                      onClick={() => handleAnswerSelect(option)} // Chama a função quando a opção é clicada\r\n                    >\r\n                      {option.choice_text}\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              {isCorrect && (\r\n                <p className=\"text-green-600 mt-2\">\r\n                  Resposta correta! Avançando para a próxima pergunta...\r\n                </p>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center mt-10\">\r\n              <h3 className=\"text-2xl font-semibold pb-5\">\r\n                Parabéns! Você completou o questionário.\r\n              </h3>\r\n              <Link to=\"/guia\" className=\"bg-blue-500 text-white py-2 px-4 rounded mb-4\">Voltar</Link>\r\n            </div>\r\n          )}\r\n          {/* Barra de progresso */}\r\n          <div className=\"mt-4\">\r\n            <div className=\"h-2 bg-gray-300 rounded-full\">\r\n              <div\r\n                className=\"h-2 bg-blue-500 rounded-full\"\r\n                style={{ width: `${((currentQuestion + 1) / questions.length) * 100}%` }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Menu lateral */}\r\n        <div className=\"w-1/5 h-screen\">\r\n          <div className=\"bg-white p-4 h-full\">\r\n            <ul className=\"flex flex-col items-center h-full space-y-10\">\r\n              <li className=\"font-bold\">Tema 1</li>\r\n              <li className=\"text-gray-600\">Tema 2</li>\r\n              <li className=\"text-gray-600\">Tema 3</li>\r\n              <li className=\"text-gray-600\">Tema 4</li>\r\n              <li className=\"text-gray-600\">Finalização</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}